# Default values for logstash-parent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

logstash:
  image: "docker.elastic.co/logstash/logstash"
  imageTag: "8.15.0"
  extraVolumes:
    - name: logstash-config
      configMap:
        name: nmap-logstash-config
        items:
          - key: logstash.yml
            path: logstash.yml
          - key: pipelines.yml
            path: pipelines.yml

    - name: pipelines
      configMap:
        name: nmap-pipeline-config

    - name: ca-cert-volume
      secret:
        secretName: elasticsearch-master-certs

  extraVolumeMounts:
    - name: logstash-config
      mountPath: /usr/share/logstash/config/logstash.yml
      subPath: logstash.yml

    - name: logstash-config
      mountPath: /usr/share/logstash/config/pipelines.yml
      subPath: pipelines.yml

    - name: pipelines
      mountPath: /usr/share/logstash/pipeline

    - name: ca-cert-volume
      mountPath: /usr/share/logstash/config/certs/ca.crt
      subPath: ca.crt
  service:
    type: NodePort
    ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
        nodePort: 30003 
   
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

